$form-border-color: $light_gray;
$form-border-color-hover: darken($light_gray, 10);
$form-border-color-focus: $teal;
$form-box-shadow: inset 0 1px 3px hsla(0, 0%, 0%, 0.06);
$form-box-shadow-focus: $form-box-shadow, 0 0 5px rgba(darken($form-border-color-focus, 5), 0.7);

// label
//
// Basic label. Use class on labels for required fields
//
// Markup:
// <label class="{$modifiers}">Sample label</label>
//
// .required - adds *
//
// Styleguide 8.1

input,
label,
select {
	display: inline-block;
}

label {
	@include sans_light;
	margin-bottom: $base_line_height / 4;

	&.required:before {
		content: "*";
	}

	abbr {
		display: none;
	}
}

input[type="search"] {
	@include appearance(none);
}

input[type="checkbox"], input[type="radio"] {
	display: inline;
	margin-right: $base_line_height / 4;
}

select {
	width: auto;
}

button,
input[type="submit"] {
	@extend %button;
	@include appearance(none);
	cursor: pointer;
	user-select: none;
	vertical-align: middle;
	white-space: nowrap;
}

// Forces iPhone from zooming on inputs, which was causing the user to have to manually unzoom everytime they focused on an input. Specifically happening in modals.
@media screen and (-webkit-min-device-pixel-ratio:0) { 
 select:focus, textarea:focus, input:focus {
 font-size: 16px;
  }
 }


// Basic Text Input
//
// Markup:
// <input type="text" class="{$modifiers}" placeholder="Sample text input" />
//
// :hover - darkens the border color
// :focus - changes shadow/border to teal
// .error - changes border to red
//
//  Styleguide 8.2

// Basic Textarea
//
// Markup:
// <textarea class="{$modifiers}">Sample text area</textarea>
//
// :hover - darkens the border color
// :focus - changes shadow/border to teal
// .interacted:invalid - changes border to red added via js listner on blur
//
// Styleguide 8.3

textarea, #{$all-text-inputs} {
	@include box-sizing(border-box);
	@include transition(border-color);
	background-color: $white;
	border: 1px solid $form-border-color;
	box-shadow: $form-box-shadow;
	width: 100%;
	padding: 0.5em 1em;
	border-radius: 6px;
	margin-bottom: rem(20);
	color: darken($light_gray, 25);
	font-weight: 300;
	@include sans_light;

	&:hover {
		border-color: $form-border-color-hover;
	}

	&:focus {
		border-color: $form-border-color-focus;
		box-shadow: $form-box-shadow-focus;
		outline: none;
	}

}

// class is added via a js listner on the input fields
input {
	.interacted {

		&:invalid {
			border-color: $light_red;
			color: $light_red;
			box-shadow: $form-box-shadow;
			@extend .fa;
			@extend .fa-times;
		}
	}
}

//checkbox styles

%ui_checkbox_generic {
	position: absolute; left: -999em;

	+ label {
		@include user-select(none);
		cursor: pointer;
		span {
			display: block;
			text-indent: 0;
			@extend %muted_text;
			font-weight: normal;
		}
	}
}

// .ui_checkbox
//
// Generic teal checkbox
//
// Markup: <input type="checkbox" id="sampleCheckbox" class="ui_checkbox"/>
// <label for="sampleCheckbox">Label Here</label>
//
// Styleguide 8.4

.ui_checkbox {
	@extend %ui_checkbox_generic;

	+ label {
		color: $teal;
		font-size: 1.2rem;
		font-weight: 500;

		&:before {
			position: relative;
			left: rem(-2);
			margin-right: 0.5em;
			padding: .08rem .56rem;
			background-color: $white;
			border: 1px solid $teal;
			border-radius: 4px;
			color: transparent;
			@extend .fa;
			@extend .fa-check;
		}
	}

	&:checked {
		+ label {
			&:before {
				color: $teal;
			}
		}
	}

	&:focus {
		+ label {
			&:before {
				box-shadow: $form-box-shadow-focus;
			}
		}
	}

}

// .ui_checkbox_green
//
// Green checkbox
//
// Markup: <input type="checkbox" id="sampleCheckboxGreen" class="ui_checkbox_green"/>
// <label for="sampleCheckboxGreen"><i class="fa fa-circle-o"></i>Label Here</label>
//
// Styleguide 8.5

.ui_checkbox_green {
	@extend %ui_checkbox_generic;

	+ label {
		//@include sans_med;
		color: darken($gloo_gray, 10);
		font-weight: 500;
		// indent for vertically stacked radios so text wraps properly
		margin-left:1.58em;
		text-indent: -0.9em;
		padding-bottom: rem(15);

		i {
			color: lighten($light_gray, 10%);
			margin-right: rem(5);
			font-size: rem(18);
		}
	}

	&:focus {
		+ label {
			i {
				border-radius: 10px;
				//box shadow hack
				&:before {
					display: block;
					margin-top:-1px;
					margin-bottom: -3px;
				}
			}
		}
	}

	&:checked {
		+ label {
			i {
				box-shadow: none;
				@extend .fa;
				@extend .fa-check-circle;
				color: $light_green;
			}
		}
	}
}

//select styles

%ui_select_generic {
	padding: 0;
	margin: 0;
	border-radius: 5px;
	@extend %muted_text;
	cursor: pointer;
	position: relative;
	height: rem(35);

	i {
		line-height: 1rem;
		font-size: 2rem;
		display: block;
	}

	select {
		border-radius: 5px;
		box-shadow: $form-box-shadow;
		background-color: $white;
		background-image: none;
		@include appearance(none);
		cursor: pointer;
		border: 1px solid $form-border-color;
 	    float: left;
		padding: .8rem 0 .5rem 1.5rem;
		height: 100%;
		width: 100%;
		font-weight: 100;
		z-index: 10;

		+ div {
			position: absolute;
			top: 1px;
			right: 1px;
			bottom: 1px;
			padding: .25rem 1rem;
			//background color hides the firefox arrow
			background-color: $white;
			border-radius: 0 6px 6px 0;
			z-index: 10;
			pointer-events: none;
		}

 		&:focus {
			outline: none;
			border: 1px solid $teal;
 			box-shadow: $form-box-shadow-focus;
 			position: absolute;
 			left:0;
 			right:0;
 			top:0;
 			bottom:0;
 			+ div {
	 			border-color: $teal;
	 		}
		}

		// removes firefox dotted line
		&:-moz-focusring {
			color: transparent;
			text-shadow: 0 0 0 $black;
		}

	}

}

// .ui_select
//
// Default select box for standard forms
//
// Markup:
// <div class="ui_select {$modifiers}">
//     <select>
//         <option>option 1</option>
//         <option>option 2</option>
//     </select>
//     <div>
//         <i class="fa fa-caret-up"></i>
//         <i class="fa fa-caret-down"></i>
//     </div>
// </div>
//
// Styleguide 8.6

.ui_select {
	@extend %ui_select_generic;
	@include box-sizing(border-box);
	@include transition(border-color);
	@extend %muted_text;
	border-radius: 6px;
	margin-bottom: rem(20);
	font-weight: 300;
	background-color: $white;

	select {
		+ div {
			border-left: 1px solid $form-border-color;
		}
	}

	.fa-caret-up {
		margin: .35rem 0 .1rem;
		display: block;
	}

}

// .ui_select_arrow
//
// Select box with right arrow example seen in widget settings
//
// Markup:
// <div class="ui_select_arrow {$modifiers}">
//     <select>
//         <option>option 1</option>
//         <option>option 2</option>
//     </select>
//     <div>
//         <i class="fa fa-angle-down"></i>
//     </div>
// </div>
//
// Styleguide 8.7

.ui_select_arrow {
	@extend %ui_select_generic;

	i {
		color: $black;
	}

	select {
		+ div {
			padding-top: 1.2rem;
		}
	}

}

//radio styles
%ui_radio_generic {
	position: absolute; left: -999em;

	+ label {
		@include user-select(none);
		cursor: pointer;

		&:focus {
			border-color: $form-border-color-focus;
		}
	}
}

// .ui_radio
//
// Rectangular radio button
//
// Markup: <div class="ui_radio">
//    <input type="radio" name="gender" id="male" value="male">
//    <label class="btn_radio" for="male">Male</label>
//    <input type="radio" id="female" name="gender" value="female">
//    <label class="btn_radio" for="female">Female</label>
//</div>
//
// Styleguide 8.8

.ui_radio {
	@extend %clearfix;
	margin-bottom: rem(20);
	height: rem(36);
	background: #fff;

	.btn_radio {
	    cursor: pointer;
	    float: left;
	    width: 50% !important;
	    padding: $standard-btn-pad;
	    text-align: center;
	    margin-bottom: 0;
	    color: $teal;
	    font-weight: 300;
	    font-size: 1.5rem;
	    outline: none;
	    border: 1px solid $teal;

	    &:nth-child(2) {
	    	border-radius: 5px 0 0 5px!important;
	    	border-right: none;
	    }

	    &:last-child {
	    	border-radius: 0 5px 5px 0!important;
	    	border-left: 1px solid $teal;
	    }
	}

	input[type="radio"] {
	    position: absolute;
	    left: -1000000px;
	}

	input[type="radio"]:checked + .btn_radio {
		@extend .primary;
	}

	//focus styles
	input[type="radio"]:focus + .btn_radio {
		border-color: $form-border-color-focus;
		box-shadow: $form-box-shadow-focus;
	}

	input[type="radio"]:hover + .btn_radio {
		border-color: $form-border-color-focus;
		box-shadow: $form-box-shadow-focus;
	}
}

// .ui_radio_green
//
// Multiple green radio buttons.
//
// Markup:
// <input type="radio" name="radio" id="sampleRadio1" class="ui_radio_green"/>
// <label for="sampleRadio1"><i class="fa fa-circle-o"></i>Label Here</label>
// <input type="radio" name="radio" id="sampleRadio2" class="ui_radio_green"/>
// <label for="sampleRadio2"><i class="fa fa-circle-o"></i>Really Super Crazy Long Label Here</label>
// <input type="radio" name="radio" id="sampleRadio3" class="ui_radio_green"/>
// <label for="sampleRadio3"><i class="fa fa-circle-o"></i>Super Crazy Long Label Here</label>
//
// Styleguide 8.9

.ui_radio_green {
	@extend %ui_radio_generic;

	+ label {
		@include sans_med;
		font-weight: normal;
		color: $gray;
		font-size: rem(16);
		display: block;
		// indent for vertically stacked radios so text wraps properly
		margin-left:1.58em;
		text-indent: -0.9em;
		padding-bottom: rem(15);

		i {
			@extend %muted_text;
			margin-right: rem(10);
			font-size: rem(19);
			left: .5rem;
		}

	}

	&:checked {
		+ label {
			i {
				color: $light_green;
				@extend .fa;
				@extend .fa-check-circle;
			}
		}
	}
}

//muted input
.muted {
	@include input-placeholder {
		color: lighten($light_gray, 10%)!important;
		font-style: italic;
	}
}

//html5 validation + angular styles
input:focus:required:invalid {
	background: url("/images/error_state.png") $white no-repeat 8px center;
	border-color: $light_red;
	color: $light_red;
	box-shadow: $form-box-shadow;
	padding-left: rem(25);
}

/*
new form validation styles applied via angular directive (creation currently in progress)
input.has_visited:required:invalid {
	background: url("../images/ui/error_state.png") $white no-repeat 8px center;
	border-color: $light_red;
	color: $light_red;
	box-shadow: $form-box-shadow;
	padding-left: rem(25);
}*/

%single_line_form {
	input[type=search], input[type=text] {
		border-radius: rem(25);
		background: transparent;
		letter-spacing: rem(0.18);
		margin: 0;
		padding: rem(8) rem(30) rem(8) rem(15);

		@include placeholder {
		    padding-left: 0.45em;
		    letter-spacing: rem(0.18);
		}

	}

	button, input[type="submit"] {
		position: absolute;
		right: rem(10);
		top: rem(3);
		padding: rem(5);
		border: 0;
		display: inline-block;
		background: none;
	}

	@include media($small) {
		display: inline-block;
	}

}

// .ui_search
//
// Common searchfield
//
// Markup:
// <div class="ui_search">
//     <input type="search" placeholder="Enter text..."/>
//     <button><i class="fa fa-search"></i></button>
// </div>
//
// Styleguide 8.10

.ui_search {
	@extend %single_line_form;

	input[type="search"], input[type="text"] {
		border: 0.12rem solid rgba($gloo_gray, 0.4);
		color: $gloo_gray;

		@include placeholder {
		    color: rgba($gloo_gray, 0.5);
		}

		&:focus {
			border-color: $teal;
		}

	}

	button, input[type=submit] {
		color: lighten($gloo_gray, 25%);
	}

}

// .ui_inverse
//
// Transparent and rounded style for inputs on backgrounds
//
// Markup:
// <div style="padding: 1rem; background-color: #40b2cd;f">
// 	<div class="ui_inverse">
// 		<input type="text" placeholder="Enter code..." />
// 		<button><i class="fa fa-plus-circle"></i></button>
// 	</div>
// </div>
//
// Styleguide 8.10

.ui_inverse {
	@extend %single_line_form;

	input[type="search"], input[type="text"] {
		border: 0.12rem solid rgba($white, 0.4);
		color: $white;

		@include placeholder {
		    color: rgba($white, 0.5);
		}

		&:focus {
			border-color: $white;
		}

	}

	button, input[type=submit] {
		color: $white;
	}

}