$form-border-color: $light_gray;
$form-border-color-hover: darken($light_gray, 10);
$form-border-color-focus: $teal;
$form-box-shadow: inset 0 1px 3px hsla(0, 0%, 0%, 0.06);
$form-box-shadow-focus: $form-box-shadow, 0 0 2px rgba(darken($form-border-color-focus, 5), 0.7);
$form-border-radius: 5px;

// label
//
// Basic label. Use class on labels for required fields
//
// Markup:
// <label class="{$modifiers}">Sample label</label>
//
// .required - adds *
//
// Styleguide 8.1

input,
label,
select {
	display: inline-block;
}

label {
	@include sans_light;
	margin-bottom: $base_line_height / 4;

	&.required:before {
		content: "*";
	}

	abbr {
		display: none;
	}
}

input[type="search"] {
	@include appearance(none);
}

input[type="checkbox"], input[type="radio"] {
	display: inline;
	margin-right: $base_line_height / 4;
}

select {
	width: auto;
}

button,
input[type="submit"] {
	@extend %button;
	@include appearance(none);
	cursor: pointer;
	user-select: none;
	vertical-align: middle;
	white-space: nowrap;
}

// Forces iPhone from zooming on inputs, which was causing the user to have to manually unzoom everytime they focused on an input. Specifically happening in modals. Media query adjustment needed, commenting out atm
//@media screen and (-webkit-min-device-pixel-ratio:0) { 
// select:focus, textarea:focus, input:focus {
// font-size: 16px;
//  }
// }

// Basic Text Input
//
// Markup:
// <input type="text" class="{$modifiers}" placeholder="Sample text input" />
//
// :hover - darkens the border color
// :focus - changes shadow/border to teal
//
//  Styleguide 8.2

// Basic Textarea
//
// Markup:
// <textarea class="{$modifiers}">Sample text area</textarea>
//
// :hover - darkens the border color
// :focus - changes shadow/border to teal
//
// Styleguide 8.3

textarea, #{$all-text-inputs}, select {
	@include box-sizing(border-box);
	@include transition(border-color);
	background-color: $white;
	border: 1px solid $form-border-color;
	box-shadow: $form-box-shadow;
	width: 100%;
	padding: 0.5em 1em;
	border-radius: $form-border-radius;
	margin-bottom: rem(20);
	color: darken($light_gray, 25);
	font-weight: 300;
	@include sans_light;
	text-transform: capitalize;

	&:hover {
		border-color: $form-border-color-hover;
	}

	&:focus {
		border-color: $form-border-color-focus;
		box-shadow: $form-box-shadow-focus;
		outline: none;
	}

}

// class is added via a js listner on the input fields
input {
	.interacted {

		&:invalid {
			border-color: $light_red;
			color: $light_red;
			box-shadow: $form-box-shadow;
			@extend .fa;
			@extend .fa-times;
		}
	}
}

//checkbox styles

%ui_checkbox_generic {
	position: absolute; left: -999em;

	+ label {
		@include user-select(none);
		cursor: pointer;
		span {
			display: block;
			text-indent: 0;
			@extend %muted_text;
			font-weight: normal;
		}
	}
}

// .ui_checkbox
//
// Generic teal checkbox
//
// Markup: <input type="checkbox" id="sampleCheckbox" class="ui_checkbox"/>
// <label for="sampleCheckbox">Label Here</label>
//
// Styleguide 8.4

.ui_checkbox {
	@extend %ui_checkbox_generic;

	+ label {
		color: $teal;
		font-size: 1.2rem;
		font-weight: 500;
		left: rem(2);

		&:before {
			position: relative;
			left: rem(-2);
			margin-right: 0.5em;
			padding: .08rem .56rem;
			background-color: $white;
			border: 1px solid $teal;
			border-radius: $form-border-radius;
			color: transparent;
			@extend .fa;
			@extend .fa-check;
		}
	}

	&:checked {
		+ label {
			&:before {
				color: $teal;
			}
		}
	}

	&:focus {
		+ label {
			&:before {
				box-shadow: $form-box-shadow-focus;
			}
		}
	}

}

// .ui_checkbox_green
//
// Green checkbox
//
// Markup: <input type="checkbox" id="sampleCheckboxGreen" class="ui_checkbox_green"/>
// <label for="sampleCheckboxGreen"><i class="fa fa-circle-o"></i>Label Here</label>
//
// Styleguide 8.5

.ui_checkbox_green {
	@extend %ui_checkbox_generic;

	+ label {
		//@include sans_med;
		color: darken($gloo_gray, 10);
		font-weight: 500;
		// indent for vertically stacked radios so text wraps properly
		margin-left:1.58em;
		text-indent: -0.9em;
		padding-bottom: rem(15);

		i {
			color: lighten($light_gray, 10%);
			margin-right: rem(5);
			font-size: rem(18);
		}
	}

	&:focus {
		+ label {
			i {
				border-radius: 10px;
				//box shadow hack
				&:before {
					display: block;
					margin-top:-1px;
					margin-bottom: -3px;
				}
			}
		}
	}

	&:checked {
		+ label {
			i {
				box-shadow: none;
				@extend .fa;
				@extend .fa-check-circle;
				color: $light_green;
			}
		}
	}
}

// select
//
// common generic select element
//
// Markup:
// <select>
//     <option>option 1</option>
//     <option>option 2</option>
// </select>
//
// Styleguide 8.6

select {
	// @extend %muted_text;
	// border-radius: $form-border-radius;
	// box-shadow: $form-box-shadow;
	background-color: $white;
	// border: 1px solid $form-border-color;
	// background-image: none;
	cursor: pointer;
	// padding: .5rem 1rem;
	// font-weight: 100;

	&:focus {
		outline: none;
		border: 1px solid $teal;
		box-shadow: $form-box-shadow-focus;
	}

	// removes firefox dotted line
	&:-moz-focusring {
		color: transparent;
		text-shadow: 0 0 0 $black;
	}
}

// %ui_select_arrow
//
// These are the styles for the common ui_select. Keeping this abstracted out of the ui_select class is important in case of a site-wide style change. We need to be able to change the style here ie, adding new selects etc, without having to change the class name or markup.
//
// Styleguide 8.7

%ui_select_arrow {
	padding: 0;
	margin: 0;
	border-radius: $form-border-radius;
	@extend %muted_text;
	cursor: pointer;
	position: relative;
	background-color: $white;

	// white background + border are needed to hide firefox arrow :(
	&:before {
		@extend .fa;
		@extend .fa-angle-down;
		background: $white;
		line-height: 1rem;
		font-size: 2rem;
		position: absolute;
		right: .1rem;
		top: .1rem;
		padding: 1.1rem 1rem 0;
		border-radius: 0 $form-border-radius $form-border-radius 0;
	}

	select {	
		@include appearance(none);
		background-color: transparent;
		padding-right: 3rem;
		height: 100%;
		width: 100%;
		z-index: 1;
	}

}

// .ui_select
//
// A fancy select with font awesome arrow, extends %ui_select_arrow
//
// Markup:
// <div class="ui_select {$modifiers}">
//     <select>
//         <option>option 1</option>
//         <option>option 2</option>
//     </select>
// </div>
//
// Styleguide 8.8

.ui_select {
	@extend %ui_select_arrow;
}

//radio styles
%ui_radio_generic {
	position: absolute; left: -999em;

	+ label {
		@include user-select(none);
		cursor: pointer;

		&:focus {
			border-color: $form-border-color-focus;
		}
	}
}

// .ui_radio
//
// Rectangular radio button
//
// Markup: <div class="ui_radio">
//    <input type="radio" name="gender" id="male" value="male">
//    <label class="btn_radio" for="male">Male</label>
//    <input type="radio" id="female" name="gender" value="female">
//    <label class="btn_radio" for="female">Female</label>
//</div>
//
// Styleguide 8.8

.ui_radio {
	@extend %clearfix;
	margin-bottom: rem(20);
	background: #fff;

	.btn_radio {
	    cursor: pointer;
	    float: left;
	    width: 50% !important;
	    padding: .25rem 2rem;
	    text-align: center;
	    margin-bottom: 0;
	    color: $teal;
	    font-weight: 300;
	    font-size: 1.5rem;
	    outline: none;
	    border: 1px solid $teal;

	    &:nth-child(2) {
	    	border-radius: $form-border-radius 0 0 $form-border-radius!important;
	    	border-right: none;
	    }

	    &:last-child {
	    	border-radius: 0 $form-border-radius $form-border-radius 0!important;
	    	border-left: 1px solid $teal;
	    }
	}

	input[type="radio"] {
	    position: absolute;
	    left: -1000000px;
	}

	input[type="radio"]:checked + .btn_radio {
		background-color: $teal;
		color: $white;
	}

	//focus styles
	input[type="radio"]:focus + .btn_radio {
		border-color: $form-border-color-focus;
		box-shadow: $form-box-shadow-focus;
	}

	input[type="radio"]:hover + .btn_radio {
		border-color: $form-border-color-focus;
		box-shadow: $form-box-shadow-focus;
	}
}

// .ui_radio_green
//
// Multiple green radio buttons.
//
// Markup:
// <input type="radio" name="radio" id="sampleRadio1" class="ui_radio_green"/>
// <label for="sampleRadio1"><i class="fa fa-circle-o"></i>Label Here</label>
// <input type="radio" name="radio" id="sampleRadio2" class="ui_radio_green"/>
// <label for="sampleRadio2"><i class="fa fa-circle-o"></i>Really Super Crazy Long Label Here</label>
// <input type="radio" name="radio" id="sampleRadio3" class="ui_radio_green"/>
// <label for="sampleRadio3"><i class="fa fa-circle-o"></i>Super Crazy Long Label Here</label>
//
// Styleguide 8.9

.ui_radio_green {
	@extend %ui_radio_generic;

	+ label {
		@include sans_med;
		font-weight: normal;
		color: $gray;
		font-size: rem(16);
		display: block;
		// indent for vertically stacked radios so text wraps properly
		margin-left:1.58em;
		text-indent: -0.9em;
		padding-bottom: rem(15);

		i {
			@extend %muted_text;
			margin-right: rem(10);
			font-size: rem(19);
			left: .5rem;
		}

	}

	&:checked {
		+ label {
			i {
				color: $light_green;
				@extend .fa;
				@extend .fa-check-circle;
			}
		}
	}
}

//muted input
.muted {
	@include input-placeholder {
		color: lighten($light_gray, 10%)!important;
		font-style: italic;
	}
}

%single_line_form {
	input[type=search], input[type=text] {
		border-radius: rem(25);
		background: transparent;
		letter-spacing: rem(0.18);
		margin: 0;
		padding: rem(8) rem(30) rem(8) rem(15);

		@include placeholder {
		    padding-left: 0.45em;
		    letter-spacing: rem(0.18);
		}

	}

	button, input[type="submit"] {
		position: absolute;
		right: rem(10);
		top: rem(3);
		padding: rem(5);
		border: 0;
		display: inline-block;
		background: none;
	}

	@include media($small) {
		display: inline-block;
	}

}

// .ui_search
//
// Common searchfield
//
// Markup:
// <div class="ui_search">
//     <input type="search" placeholder="Enter text..."/>
//     <button><i class="fa fa-search"></i></button>
// </div>
//
// Styleguide 8.10

.ui_search {
	@extend %single_line_form;

	input[type="search"], input[type="text"] {
		border: 0.12rem solid rgba($gloo_gray, 0.4);
		color: $gloo_gray;

		@include placeholder {
		    color: rgba($gloo_gray, 0.5);
		}

		&:focus {
			border-color: $teal;
		}

	}

	button, input[type=submit] {
		color: lighten($gloo_gray, 25%);
	}

	@include media($medium) {
		max-width: rem(240);
	}

}

// .ui_inverse
//
// Transparent and rounded style for inputs on backgrounds
//
// Markup:
// <div style="padding: 1rem; background-color: #40b2cd;f">
// 	<div class="ui_inverse">
// 		<input type="text" placeholder="Enter code..." />
// 		<button><i class="fa fa-plus-circle"></i></button>
// 	</div>
// </div>
//
// Styleguide 8.10

.ui_inverse {
	@extend %single_line_form;

	input[type="search"], input[type="text"] {
		border: 0.12rem solid rgba($white, 0.4);
		color: $white;

		@include placeholder {
		    color: rgba($white, 0.5);
		}

		&:focus {
			border-color: $white;
		}

	}

	button, input[type=submit] {
		color: $white;
	}

}

// .ui_file_upload
//
// File Input
//
// Markup:
// <div class="ui_file_upload">
// <input type="file" />
// <a class="primary">Choose File(s)</a>
// </div>
//
// Styleguide 8.10

.ui_file_upload {
	margin: rem(30) 0 rem(50);
	display: inline-block;
	.primary {
		font-size: rem(20);
		position: absolute;
		top: 0;
		right: 0;
		margin: auto;
		left: 0;
		width: 22rem;
	}
	input[type=file] {
		opacity: 0;
		z-index: 1;
		font-size: 2rem;
		height: 4rem;
		width: 50%;
		&:focus {
			outline: none;
		}
	}
}