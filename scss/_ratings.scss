
// # .star, .star.filled, .star.half
//
// Basic stars. These stars are static and meant to only display ratings. Star group does not have any styling associated with it, it is merely meant to be a placeholder to group the stars together.
//
// Markup:
// <div class="star_group">
//     <input type="radio" class="star"><label><i></i></label>
//     <input type="radio" class="star"><label><i></i></label>
//     <input type="radio" class="star half"><label><i></i></label>
//     <input type="radio" class="star filled"><label><i></i></label>
//     <input type="radio" class="star filled"><label><i></i></label>
// </div>
//
// Styleguide 23.1

.star_group {
	@extend %clearfix;
	float: left;
	.star {
		+ label {
			cursor: default
		}
	}
}

.star {
	position: absolute;
	left: -9999px;

	+ label {
		float: right;
		display: block;
		font-size: rem(30);
		color: lighten($light_gray, 10%);
		@extend .fa;
		@extend .fa-star-o;
		margin-right: 1rem;
		cursor: pointer;
		// bourbon mixin is not working for multiple properties...possible bourbon bug?
		transition: color .2s ease-in-out, text-shadow .2s ease-in-out;

		&:before {
			//this is the outline on the star, .fa-star-o
			position: relative;
			z-index: 1;
		}

		i {
			@extend .fa;
			@extend .fa-star;
			color: transparent;
			position: absolute;
			left: 0;
			top:0;
			z-index: 0;
		}
	}

	&.filled, &:checked {
		+ label {
			i {
				color: $yellow;
			}
		}
	}

	&.half {
		+ label {
			i {
				color: $yellow;
				@extend .fa-star-half;
			}
		}
	}
}

// .star_group.rate
//
// These stars are meant to allow for selecting a rating.
//
// Markup:
// <div class="star_group rate">
//     <input type="radio" id="5stars" class="star"><label for="5stars"><i></i></label>
//     <input type="radio" id="4stars" class="star"><label for="4stars"><i></i></label>
//     <input type="radio" id="3stars" class="star"><label for="3stars"><i></i></label>
//     <input type="radio" id="2stars" class="star"><label for="2stars"><i></i></label>
//     <input type="radio" id="1star" class="star"><label for="1star"><i></i></label>
// </div>
//
// Styleguide 23.2

.star_group.rate {

	// sets up animations for the interactive stars
	.star {
		+ label {
			cursor: pointer;
			transform: scale(1);
			text-shadow: 0 0 0 rgba($white, 0);
		}
	}

	.star {
		// labels are entered backwards (5 stars, 4 stars, 3 stars, 2 stars, 1 star) so that the can be 'artifically selected' using the sibling selector
		&:checked {
			+ label,
			~ label ~ label,
			+ label:hover,
			+ label:hover ~ label,
			~ label:hover,
			~ label:hover ~ label {
				color: lighten($light_gray, 10%);
				text-shadow: none;
				transform: none;
				i {
					color: $yellow;
				}
			}
		}

		// sets up hover styles for star and it's stars before it
		&:not(:checked) {
			+ label {
				&:hover {
					// scale the hovered star if it is not checked
					transform: scale(1.2);
					color: $white;
					text-shadow: 0 0 5px darken($yellow, 20%);
					i {
						color: $yellow;
					}
					// makes the lesser stars look filled in
					~ label {
						color: $white;
						text-shadow: 0 0 5px darken($yellow, 20%);
						i {
							color: $yellow;
						}
					}
				}
			}
		}

	}
}

// .star_group.small
//
// Tiny stars, 20px. Reglar size stars default to 30px.
//
// Markup:
// <div class="star_group small">
//     <input type="radio" class="star"><label><i></i></label>
//     <input type="radio" class="star"><label><i></i></label>
//     <input type="radio" class="star half"><label><i></i></label>
//     <input type="radio" class="star filled"><label><i></i></label>
//     <input type="radio" class="star filled"><label><i></i></label>
// </div>
//
// Styleguide 23.3

.star_group.small {
	.star {
		+ label {
			font-size: rem(20);
		}
	}
}
