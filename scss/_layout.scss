// .wrapper
//
// Extend this when you need a container element
//
// Styleguide 7.1

.wrapper {
	@include outer-container;
}

// .hidden_mobile
//
// Extend this on elements that show on tablet and above
//
// Styleguide 7.2

.hidden_mobile {
	display: none;
	
	@include media($medium) {
		display: block;

		&.inline {
			display: inline-block;
		}

	}
}

// .mobile_only
//
// Extend this on elements that show only on mobile
//
// Styleguide 7.3

.mobile_only {
	display: block;
	@include media($medium) {
		display: none;
	}

	&.inline {
		display: inline-block;

		@include media($medium) {
			display: none;
		}
	}
}

// .desktop_only
//
// Extend this on elements that show only on desktop
//
// Styleguide 7.4

.desktop_only {
	display: none;

	@include media($large) {
		display: block;
		&.inline {
			display: inline-block;
		}
	}
}

// .tablet_up
//
// Extend this on elements hide from large tablet up
//
// Styleguide 7.5

.tablet_up_hide {
	@include media($large) {
		display: none;
	}
}

// Grid classes
//
// These basic classes set up widths. They do not trigger any styles on mobile and are thus defaulting to full width. Tablet converts to an 8 col grid and desktop converts to 12 col, as set up in _grid. Extend these whenever possible to keep markup clean: .one_col - .twelve_col
//
// Styleguide 7.6
.half_col {
	@include media($medium) {
		@include span-columns(0.33);
	}
	@include media($large) {
		@include span-columns(.5);
	}
}
.one_col {
	@include media($medium) {
		@include span-columns(0.66);
	}
	@include media($large) {
		@include span-columns(1);
	}
}
.two_col {
	@include media($medium) {
		@include span-columns(1.32);
	}
	@include media($large) {
		@include span-columns(2);
	}
}
.three_col {
	@include media($medium) {
		@include span-columns(1.98);
	}
	@include media($large) {
		@include span-columns(3);
	}
}
.four_col {
	@include media($medium) {
		@include span-columns(2.64);
	}
	@include media($large) {
		@include span-columns(4);
	}
}
.five_col {
	@include media($medium) {
		@include span-columns(3);
	}
	@include media($large) {
		@include span-columns(5);
	}
}
.six_col {
	@include media($medium) {
		@include span-columns(3.96);
	}
	@include media($large) {
		@include span-columns(6);
	}
}
.seven_col {
	@include media($medium) {
		@include span-columns(3);
	}
	@include media($large) {
		@include span-columns(7);
	}
}
.eight_col {
	@include media($medium) {
		@include span-columns(4.62);
	}
	@include media($large) {
		@include span-columns(8);
	}
}
.nine_col {
	@include media($medium) {
		@include span-columns(5.94);
	}
	@include media($large) {
		@include span-columns(9);
	}
}
.ten_col {
	@include media($medium) {
		@include span-columns(6.6);
	}
	@include media($large) {
		@include span-columns(10);
	}
}
.eleven_col {
	@include media($medium) {
		@include span-columns(7.26);
	}
	@include media($large) {
		@include span-columns(11);
	}
}
.twelve_col {
	@include media($medium) {
		@include span-columns(7.92);
	}
	@include media($large) {
		@include span-columns(12);
	}
}

// .row
//
// Wrap above column layout classes in a .row
//
// Styleguide 7.7

.row {
	@include omega;
	@extend %clearfix;
}

// %clearfix
//
// The holy grail of css, use it to clear floats and for general happiness. Use with @extend.
//
// Markup:
// div {
//	@extend %clearfix;
//}
//
// Styleguide 7.7

%clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}