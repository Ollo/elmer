// # _layout
//
//
// Styleguide 8.0

// # .wrapper
//
// Extend this when you need a container element
//
// Styleguide 8.1

.wrapper {
	@include outer-container;
}

// # Primary layout
//
// Layout depends on these main elements: #globalWrap, .content_wrap, main, .global_container, .table_wrap, & #leftSidebar
//
// Styleguide 8.2

#globalWrap {
	padding-top: rem(20);

	.content_wrap {
		background: $sand;
		padding: rem(40) rem(15) 0;
		border-top: 1px solid #dedddc;
		clear: left;
		margin-bottom: rem(40);

		> main {
			@extend %clearfix;
		}
	}

	//tablet+ styles
	@include media($medium) {

		background: $sand;

		//continue border tomfoolery in background
		&:before {
			content: " ";
			position: absolute;
			height: 1px;
			background: #dedddc;
			width: 100%;
			top: rem(104);
			z-index: 1;
		}

		//continue white header tomfoolery in background
		&:after {
			content: " ";
			background: #fff;
			width: 100%;
			position: absolute;
			top: 0;
			left: 0;
			height: rem(105);
		}

	}

	@include media($large) {
		padding-top: 0;

		.content_wrap {
			padding: 0;

			> main {
				padding: rem(30);
			}

			.widget_dash {
				padding-right: 0;
			}
		}
	}
}

.global_container {
	@extend .wrapper;
	z-index: 20;
	background: $sand;
	clear: left;

	//tablet portrait+
	@include media($large) {

		.table_wrap {
			@include span-columns(15);
			@include row(table);
		}

		#leftSidebar {
			@include span-columns(3);
			@include pad(0);
			width: rem(200);
		}

		.content_wrap {
			@include span-columns(12);
			@include reset-display;
		}
	}
}

// # .hidden_mobile
//
// Extend this on elements that show on tablet and above
//
// Styleguide 8.3

.hidden_mobile {
	display: none;
	@include media($medium) {
		display: block;
	}
}

// # .mobile_only
//
// Extend this on elements that show only on mobile
//
// Styleguide 8.4

.mobile_only {
	display: block;
	@include media($medium) {
		display: none;
	}

	&.inline {
		display: inline-block;

		@include media($medium) {
			display: none;
		}
	}
}

// # .one_col, .two_col, .three_col, .four_col, .five_col, .six_col, .seven_col, .eight_col, .nine_col, .eleven_col, .twelve_col
//
// These basic classes set up widths. They do not trigger any styles on mobile and are thus defaulting to full width. Tablet converts to an 8 col grid and desktop converts to 12 col, as set up in _grid. Extend these whenever possible to keep markup clean.
//
// Styleguide 8.5
.one_col {
	@include media($medium) {
		@include span-columns(0.66);
	}
	@include media($large) {
		@include span-columns(1);
	}
}
.two_col {
	@include media($medium) {
		@include span-columns(1.32);
	}
	@include media($large) {
		@include span-columns(2);
	}
}
.three_col {
	@include media($medium) {
		@include span-columns(1.98);
	}
	@include media($large) {
		@include span-columns(3);
	}
}
.four_col {
	@include media($medium) {
		@include span-columns(2.64);
	}
	@include media($large) {
		@include span-columns(4);
	}
}
.five_col {
	@include media($medium) {
		@include span-columns(3);
	}
	@include media($large) {
		@include span-columns(5);
	}
}
.six_col {
	@include media($medium) {
		@include span-columns(3.96);
	}
	@include media($large) {
		@include span-columns(6);
	}
}
.seven_col {
	@include media($medium) {
		@include span-columns(3);
	}
	@include media($large) {
		@include span-columns(7);
	}
}
.eight_col {
	@include media($medium) {
		@include span-columns(4.62);
	}
	@include media($large) {
		@include span-columns(8);
	}
}
.nine_col {
	@include media($medium) {
		@include span-columns(5.94);
	}
	@include media($large) {
		@include span-columns(9);
	}
}
.ten_col {
	@include media($medium) {
		@include span-columns(6.6);
	}
	@include media($large) {
		@include span-columns(10);
	}
}
.eleven_col {
	@include media($medium) {
		@include span-columns(7.26);
	}
	@include media($large) {
		@include span-columns(11);
	}
}
.twelve_col {
	@include media($medium) {
		@include span-columns(7.92);
	}
	@include media($large) {
		@include span-columns(12);
	}
}

// # %clearfix
//
// The holy grail of css, use it to clear floats and for general happiness. Use with @extend.
//
// Styleguide 5.1

%clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

// # .ui-tooltip
//
// Temporary messages to display when a feature is not yet functional.
//
// Markup:
// <h2 title="Feature is not yet functional">Hover for tooltip</h2>
//
// Styleguide 5.2

.ui_tooltip {
    padding: 1rem;
    background: $white;
    border: 1px solid $teal;
    box-shadow: 0 0 2px rgba(0,0,0,.25);
    display: inline-block!important;
    z-index: 100;
    @include sans_bold;
  }
