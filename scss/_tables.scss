// <table>
//
// Markup:
// <table>
//     <thead>
//         <tr>
//             <th>Metric Name</th>
//             <th>Score Range</th>
//             <th></th>
//             <th></th>
//         </tr>
//     </thead>
//     <tbody>
//         <tr>
//             <td>Communication</td>
//             <td>1 to 5</td>
//             <td><a href="">Edit</a></td>
//             <td><a href=""><i class="fa fa-trash-o"></i</a></td>
//         </tr>
//         <tr>
//             <td><input type="text" value="Confidence"/></td>
//             <td>1 to 5</td>
//             <td><a href="" class="primary">Save Metric</a></td>
//             <td><a href=""><i class="fa fa-trash-o"></i></a></td>
//         </tr>
//    </tbody>
// </table>
//
// Styleguide 16.1


table {
  @include museo-sans;
  margin: ($base_line_height / 2) 0;
  width: 100%;
  border: $common_gray_border;
  vertical-align: middle;
}

th, td {
  padding: 0 rem(15);
  height: rem(50);
  @include media($small) {
    padding: 0 rem(35);
  }
}

th {
  color: $white;
  @extend %small_text;
  @extend %font_weight_500;
  text-align: left;
  background: tint($pale_blue, 40%);
}

td {
  border-bottom: $common_gray_border;
  @include media($small) {
   height: rem(100);
 }
}

// .table
//
// Add this class to simulate a table. Use classes to determine row widths, as seen below. The '.main' class designates what will still be displayed in the mobile view. For now, the browser must be refreshed between mobile & desktop sizes for the table to convert to an accordion properly.
//
// Markup:
// <ul class="table">
//     <li class="table_header">
//         <div class="four_col">Metric Name</div>
//         <div class="four_col hidden_mobile">Score Range</div>
//         <div class="two_col hidden_mobile"></div>
//         <div class="two_col hidden_mobile"></div>
//     </li>
//     <li class="row">
//         <a class="expand">+ View More</a>
//         <div class="four_col main">Really long two line title squish me!</div>
//         <div class="four_col range"><label>Score Range: </label><span class="first">1</span> to <span class="second">5</span></div>
//         <div class="two_col center"><a href="">Edit</a></div>
//         <div class="two_col right"><a href=""><i class="fa fa-trash-o"></i></a></div>
//    </li>
//     <li class="row">
//         <a class="expand">+ View More</a>
//         <div class="four_col main">Confidence</div>
//         <div class="four_col range"><label>Score Range: </label><span class="first">1</span> to <span class="second">5</span></div>
//         <div class="two_col center"><a href="">Save Metric</a></div>
//         <div class="two_col right"><a href=""><i class="fa fa-trash-o"></i></a></div>
//    </li>
// </ul>
//
// Styleguide 16.2

%table {
  .main {
    padding: 0.75rem 0;
  }
}

.table {
  @extend %clearfix;
  @include museo-sans;
  // @include well()
  // border: 1px solid rgba(0,0,0,0);
  // border-radius: 0.4rem;
  // box-shadow: 0 1px 0 0 $gray_light;
  background: $white;
  font-size: rem(14);
  margin-bottom: rem(20);
  color: $gray_medium;
  word-break: break-word;
  clear: both;
  overflow: hidden;

  li {
    list-style: none;
  }

  .table_header {
    @extend %small_text;
    @extend .muted_header;
    @extend .muted_header.secondary_variation;
    @extend %clearfix;
    font-weight: bold;
    text-transform: uppercase;
    background: $gray_lightest;
    border-bottom: 1px solid lighten($gray_light, 15%);
  }

  .row {
    padding: rem(15) rem(15) 0;
    border-bottom: 1px solid lighten($gray_light, 15%);
    min-height: 5rem;
    &:nth-child(2n - 1) {

      background-color: $gray_lightest;
    }

    &.active {
      background-color: #fafafa;
      padding-bottom: rem(15);
    }

    &:last-child {
      border-bottom: 0;
    }
  }

  .expand {
    text-decoration: none;
    position: absolute;
    right: rem(15);
    cursor: pointer;
    z-index: 10;
  }

  .main {
    padding-right: rem(110);
    padding-bottom: rem(15);
  }

  .range {
    display: inline-block;
    @extend %muted_text;
    text-align: left;
  }

  .mobile_label {
    color: $gray_dark;
    padding-right: rem(5);
    @extend %font_weight_500;
  }

  .fa-trash-o {
    color: $gray_medium;
    cursor: pointer;
    padding: .6rem;
  }

  > div {
    a {
      text-decoration: underline;
    }
  }

  input {
    margin: 0;
    float: left;
    width: 80%;
  }

  select {
    color: $gray_medium;
  }

  .primary, .disabled, .secondary {
    text-decoration: none;
    min-width: rem(147);
    display: inline-block;
    text-align: center;

    &:hover {
      color: $white;
    }
  }

  p {
    margin: 0;
    max-width: rem(335);
  }

  .handle {
    display: none;
  }

  .ui_select {
    margin-bottom: rem(9);
  }

  .dropdown {
    margin-bottom: 0;
  }

  .avatar {
    margin: rem(15) 0;
  }

  .pending {
    @extend %muted_text;
    a {
      @extend %muted_text;
    }
  }

  @include media($mobileOnly) {

    div {
      float: left;
      width: 100%;
      padding: 0 0 rem(5);
      margin: 0 0 rem(5);
    }

    .table_details {
      div {
        margin: 0 0 1rem;
      }
    }

    .dropdown_tertiary {
      padding-bottom: 0;
    }

    .hidden_mobile {
      display: none!important;
    }

  }

  @include media($medium) {

    .table_header {
      padding: rem(15) rem(35);

      div:last-child {
        text-align: right;
      }
    }

    .row {
      padding: rem(30) rem(35);
    }

    // used to be <label>, but we need to move to a class for better specification
    // tables have not yet been refactored to use this class, must do!
    .mobile_label {
      display: none;
    }

    .range {
      .first {
        padding-right: rem(30);
      }

      .second {
        padding-left: rem(30);
      }
    }

    .expand {
      display: none;
    }

    .main {
      border-bottom: none;
      padding: 0;
    }

    .panel {
      display: inline-block!important;
    }

    input[type="text"], input[type="email"] {
      max-width: rem(340);
    }

    .primary, .disabled, .secondary {
      margin-bottom: 0;
    }

    .right {
      text-align: right;

      .half {
        float: right;
      }
    }

    .center {
      text-align: center;
    }

    .handle {
      display: inline-block;
      padding-right: rem(40);
      color: $gray_medium;
    }

    .ui_select {
      margin-bottom: 0;
    }

    .avatar {
      margin: 0;
    }
  }
}

.table_details {
  display: none;
  &.open {
    display: block;
  }
  @include media($medium) {
    display: block!important;
  }
}


// .flex_table
//
// Add this class to simulate a table. Use classes to determine column widths, as seen below.
// This type of table should be used when the table's contents will include variable-height elements.
// The flexible box model makes alignment and responsiveness very simple to achieve.
//
// Markup:
// <ul class="flex_table">
//   <li class="table_header">
//     <div class="cols1">
//       <span class="hidden_mobile">.cols1</span>
//       <span class="mobile_label">Mobile Cols</span>
//     </div>
//     <div class="cols2 hidden_mobile">.cols2</div>
//     <div class="cols4 hidden_mobile">.cols4<i class="fa fa-sort-asc"></i></div>
//     <div class="cols1 hidden_mobile">.cols1</div>
//   </li>
//   <li class="row">
//     <div class="cols1"><label class="mobile_label">.cols1: </label>Really, really, super long, not short, long two line title squish me!</div>
//     <div class="cols2"><label class="mobile_label">.cols2: </label><button class="secondary">Ima button</div>
//     <div class="cols4">(.cols4 no mobile_label)&nbsp;<a href="">Edit</a></div>
//     <div class="cols1"><label class="mobile_label">.cols1 (again): </label><a href=""><i class="fa fa-trash-o"></i></a></div>
//   </li>
//   <li class="row">
//     <div class="cols1"><label class="mobile_label">.cols1: </label>Like my stripes?</div>
//     <div class="cols2"><label class="mobile_label">.cols2: </label><div style="width:50px;height:50px;background:#ddd">fake img</div></div>
//     <div class="cols4">(.cols4 no mobile_label)&nbsp;<a href="">Save Metric</a></div>
//     <div class="cols1"><label class="mobile_label">.cols1 (again): </label><a href=""><i class="fa fa-trash-o"></i></a></div>
//   </li>
// </ul>
//
// Styleguide 16.3
$colPadding: 0.8rem;

%flex_col {
  @include display(flex);
  @include flex-flow(row);
  @include align-items(center);
  padding: $colPadding 0;
}

@mixin flex-table($cols) {
  @include display(flex);
  @include flex-direction(column);
  border-radius: $well_border_radius;
  box-shadow: 0 1px 3px $gray_light;

  .table_header {
    @include display(flex);
    @include flex-direction(row);
    @extend %small_text;
    @extend .muted_header;
    @extend .muted_header.secondary_variation;
    color: $gray_dark;
    font-size: 1.2rem;
    font-weight: bold;
    text-transform: uppercase;
    background: $gray_lightest;
    border-bottom: 1px solid lighten($gray_light, 15%);

    [class*="fa-sort"] {
      padding: 0 1.3rem;
      top: -0.3rem;
    }
    [class*="fa-sort-asc"], [class*="fa-sort-up"] {
      top: 0.2rem;
    }
  }

  .row {
    @include display(flex);
    @include flex-flow(column nowrap);
    padding: 15px;

    &:nth-child(2n + 1) {
      background-color: $gray_lightest;
    }
  }

  @for $i from 1 through $cols {
    .cols#{$i} {
      @include flex($i);
      @extend %flex_col;
    }
  }

  .hidden_mobile {
    display:none;
  }

  .mobile_label {
    @include flex(0 0 auto);
    @extend %font_weight_500;
    margin-bottom: 0;
    padding-right: rem(5);
    color: $gray_dark;
  }


  @include media($medium) {
    .table_header {
      > [class*="col"] {
        padding-left: $colPadding;
        padding-right: $colPadding;
      }
    }

    .row {
      @include flex-direction(row);
      @include align-items(center);

      > [class*="col"] {
        padding-left: $colPadding;
        padding-right: $colPadding;
      }
    }

    .mobile_label {
      display: none;
    }

    .hidden_mobile {
      display: initial;
    }
  }
}

.flex_table {
  @include flex-table(12);
}
